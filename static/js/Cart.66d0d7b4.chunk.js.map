{"version":3,"file":"static/js/Cart.66d0d7b4.chunk.js","mappings":"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","sources":["assets/img/grey-arrow-left.svg","pages/Cart.tsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgGreyArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 13L1 6.93015L6.86175 1\",\n    stroke: \"#D3D3D3\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGreyArrowLeft);\nexport default __webpack_public_path__ + \"static/media/grey-arrow-left.7829119cd62b4e2b3fddcff288da2b8f.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useEffect, useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {CartItem, EmptyCart, ConfirmModal} from \"../components\";\r\nimport {cartActions} from \"../redux/cartSlice/cartSlice\";\r\nimport {selectCart} from \"../redux/cartSlice/selectCart\";\r\nimport {useAppDispatch} from \"../customHooks/useAppDispatch\";\r\nimport comeBack from '../assets/img/grey-arrow-left.svg';\r\n\r\n\r\nconst Cart = () => {\r\n    const [isConfirmModalVisible, setConfirmModalVisible] = useState(false);\r\n    const {totalPrice, items} = useSelector(selectCart);\r\n    const [predictedTotalPrice, setPredictedTotalPrice] = useState(totalPrice);\r\n    const dispatch = useAppDispatch();\r\n    const totalCount = items.reduce((sum: number, item: any) => sum + item.count, 0);\r\n\r\n    useEffect(() => {\r\n        setPredictedTotalPrice(totalPrice);\r\n    }, [totalPrice]);\r\n\r\n\r\n    const onClickClear = () => {\r\n        setConfirmModalVisible(true);\r\n    };\r\n\r\n    const onCancel = () => {\r\n        setConfirmModalVisible(false);\r\n        setPredictedTotalPrice(totalPrice);\r\n    };\r\n\r\n    const onConfirmClear = () => {\r\n        dispatch(cartActions.clearItems());\r\n        setConfirmModalVisible(false);\r\n        setPredictedTotalPrice(totalPrice);\r\n    };\r\n\r\n    const updatePredictedTotalPrice = (amountToRemove: number) => {\r\n        setPredictedTotalPrice(currentPrice => currentPrice - amountToRemove);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {totalPrice > 0 ? <div className=\"container container--cart\">\r\n                    <div className=\"cart\">\r\n                        <div className=\"cart__top\">\r\n                            <h2 className=\"content__title\">\r\n                                <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios/50/shopping-cart--v1.png\"\r\n                                     alt=\"shopping-cart--v1\"\r\n                                />\r\n                                Cart\r\n                            </h2>\r\n                            <div onClick={onClickClear}\r\n                                 className=\"cart__clear\"\r\n                            >\r\n                                <img width=\"20\" height=\"20\" src=\"https://img.icons8.com/ios/50/delete-forever--v1.png\"\r\n                                     alt=\"delete-forever--v1\"\r\n                                />\r\n                                <span>Clear the cart</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"content__items\">\r\n                            {items.map((item: any) => (\r\n                                <CartItem key={item.id} {...item} updatePredictedTotalPrice={updatePredictedTotalPrice}/>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"cart__bottom\">\r\n                            <div className=\"cart__bottom-details\">\r\n                                <span> Total burgers: <b>{totalCount} pcs.</b> </span>\r\n                                <span> Order price: <b>{predictedTotalPrice} â‚½</b> </span>\r\n                            </div>\r\n                            <div className=\"cart__bottom-buttons\">\r\n                                <Link to=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n                                    <img src={comeBack} alt={'comeBack'}/>\r\n                                    <span>Come back</span>\r\n                                </Link>\r\n                                <div className=\"button pay-btn\">\r\n                                    <span>Pay now</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : <EmptyCart/>}\r\n            <ConfirmModal\r\n                isVisible={isConfirmModalVisible}\r\n                onConfirm={onConfirmClear}\r\n                onCancel={onCancel}\r\n                message=\"Are you sure you want to empty the cart?\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cart;"],"names":["_useState","useState","_useState2","_slicedToArray","isConfirmModalVisible","setConfirmModalVisible","_useSelector","useSelector","selectCart","totalPrice","items","_useState3","_useState4","predictedTotalPrice","setPredictedTotalPrice","dispatch","useAppDispatch","totalCount","reduce","sum","item","count","useEffect","updatePredictedTotalPrice","amountToRemove","currentPrice","_jsxs","_Fragment","children","_jsx","className","width","height","src","alt","onClick","map","CartItem","_objectSpread","id","Link","to","comeBack","EmptyCart","ConfirmModal","isVisible","onConfirm","cartActions","clearItems","onCancel","message"],"sourceRoot":""}