{"version":3,"file":"static/js/Cart.40b93cc7.chunk.js","mappings":"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","sources":["assets/img/grey-arrow-left.svg","pages/Cart.tsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgGreyArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 13L1 6.93015L6.86175 1\",\n    stroke: \"#D3D3D3\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGreyArrowLeft);\nexport default __webpack_public_path__ + \"static/media/grey-arrow-left.7829119cd62b4e2b3fddcff288da2b8f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { CartItem, EmptyCart, ConfirmModal } from \"../components\";\nimport { cartActions } from \"../redux/cartSlice/cartSlice\";\nimport { selectCart } from \"../redux/cartSlice/selectCart\";\nimport { useAppDispatch } from \"../customHooks/useAppDispatch\";\nimport comeBack from \"../assets/img/grey-arrow-left.svg\";\nimport { calcTotalPrice } from \"../utils/calcTotalPrice\";\nimport { CartItemType } from \"../redux/cartSlice/cartTypes\";\n\nconst Cart = () => {\n  const [isConfirmModalVisible, setConfirmModalVisible] = useState<boolean>(false);\n  const { totalPrice, items } = useSelector(selectCart);\n  const [predictedTotalPrice, setPredictedTotalPrice] = useState<number>(totalPrice);\n  const dispatch = useAppDispatch();\n  const totalCount = items.reduce((sum: number, item: CartItemType) => sum + item.count, 0);\n\n  useEffect(() => {\n    setPredictedTotalPrice(totalPrice);\n  }, [totalPrice]);\n\n  const onClickClear = () => {\n    setConfirmModalVisible(true);\n  };\n\n  const onCancel = () => {\n    setConfirmModalVisible(false);\n    setPredictedTotalPrice(totalPrice);\n  };\n\n  const onConfirmClear = () => {\n    dispatch(cartActions.clearItems());\n    setConfirmModalVisible(false);\n    setPredictedTotalPrice(totalPrice);\n  };\n\n  const recalculateTotalPrice = () => {\n    setPredictedTotalPrice(calcTotalPrice(items));\n  };\n\n  return (\n    <>\n      {totalPrice > 0 ? (\n        <div className=\"container container--cart\">\n          <div className=\"cart\">\n            <div className=\"cart__top\">\n              <h2 className=\"content__title\">\n                <img\n                  width=\"50\"\n                  height=\"50\"\n                  src=\"https://img.icons8.com/ios/50/shopping-cart--v1.png\"\n                  alt=\"shopping-cart--v1\"\n                />\n                Cart\n              </h2>\n              <div onClick={onClickClear} className=\"cart__clear\">\n                <img\n                  width=\"20\"\n                  height=\"20\"\n                  src=\"https://img.icons8.com/ios/50/delete-forever--v1.png\"\n                  alt=\"delete-forever--v1\"\n                />\n                <span>Clear the cart</span>\n              </div>\n            </div>\n            <div className=\"content__items\">\n              {items.map((item: CartItemType) => (\n                <CartItem key={item.id} {...item} recalculateTotalPrice={recalculateTotalPrice} />\n              ))}\n            </div>\n            <div className=\"cart__bottom\">\n              <div className=\"cart__bottom-details\">\n                <span>\n                  {\" \"}\n                  Total burgers: <b>{totalCount} pcs.</b>{\" \"}\n                </span>\n                <span>\n                  {\" \"}\n                  Order price: <b>{predictedTotalPrice} â‚½</b>{\" \"}\n                </span>\n              </div>\n              <div className=\"cart__bottom-buttons\">\n                <Link to=\"/\" className=\"button button--outline button--add go-back-btn\">\n                  <img src={comeBack} alt={\"comeBack\"} />\n                  <span>Come back</span>\n                </Link>\n                <button className=\"button pay-btn\">\n                  <span>Pay now</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <EmptyCart />\n      )}\n      <ConfirmModal\n        isVisible={isConfirmModalVisible}\n        onConfirm={onConfirmClear}\n        onCancel={onCancel}\n        message=\"Are you sure you want to empty the cart?\"\n      />\n    </>\n  );\n};\n\nexport default Cart;\n"],"names":["_useState","useState","_useState2","_slicedToArray","isConfirmModalVisible","setConfirmModalVisible","_useSelector","useSelector","selectCart","totalPrice","items","_useState3","_useState4","predictedTotalPrice","setPredictedTotalPrice","dispatch","useAppDispatch","totalCount","reduce","sum","item","count","useEffect","recalculateTotalPrice","calcTotalPrice","_jsxs","_Fragment","children","_jsx","className","width","height","src","alt","onClick","map","CartItem","_objectSpread","id","Link","to","comeBack","EmptyCart","ConfirmModal","isVisible","onConfirm","cartActions","clearItems","onCancel","message"],"sourceRoot":""}