{"version":3,"file":"static/js/Cart.d5161080.chunk.js","mappings":"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","sources":["components/ConfirmModal.tsx","components/CartItem.tsx","components/EmptyCart.tsx","assets/img/grey-arrow-left.svg","pages/Cart.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ntype ConfirmType = {\r\n    onConfirm: () => void\r\n    onCancel: () => void\r\n    isVisible: boolean\r\n    message: string\r\n}\r\n\r\nexport const ConfirmModal: React.FC<ConfirmType> = ({ onConfirm, onCancel, isVisible, message }) => {\r\n    if (!isVisible) return null;\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <p>{message}</p>\r\n            <button onClick={onConfirm}>Yes</button>\r\n            <button onClick={onCancel}>No</button>\r\n        </div>\r\n    );\r\n};","import React, {useState} from \"react\";\r\nimport {cartActions} from \"../redux/cartSlice/cartSlice\";\r\nimport {CartItem as CartItemType} from '../redux/cartSlice/cartTypes';\r\nimport {useAppDispatch} from \"../customHooks/useAppDispatch\";\r\nimport {ConfirmModal} from \"../components/ConfirmModal\";\r\n\r\ntype CartItemProps = {\r\n    id: string;\r\n    title: string;\r\n    type: string;\r\n    price: number;\r\n    count: number;\r\n    imageUrl: string;\r\n};\r\n\r\nexport const CartItem: React.FC<CartItemProps> = ({id, title, type, price, count, imageUrl}) => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const onClickPlus = () => {\r\n        dispatch(\r\n            cartActions.addItem({\r\n                id,\r\n            } as CartItemType),\r\n        );\r\n    };\r\n\r\n    const onClickMinus = () => {\r\n        dispatch(cartActions.minusItem(id));\r\n    };\r\n\r\n    const onClickRemove = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const onConfirmDelete = () => {\r\n        dispatch(cartActions.removeItem(id));\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const onCancelDelete = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart__item\">\r\n            <div className=\"cart__item-img\">\r\n                <img className=\"pizza-block__image\" src={imageUrl} alt=\"Burger\"/>\r\n            </div>\r\n            <div className=\"cart__item-info\">\r\n                <h3>{title}</h3>\r\n                <p>\r\n                    {type}\r\n                </p>\r\n            </div>\r\n            <div className=\"cart__item-count\">\r\n                <button\r\n                    disabled={count === 1}\r\n                    onClick={onClickMinus}\r\n                    className=\"button button--outline button--circle cart__item-count-minus\">\r\n                    <img width=\"20\" height=\"20\" src=\"https://img.icons8.com/material-outlined/24/minus.png\" alt=\"minus\"/>\r\n                </button>\r\n                <b>{count}</b>\r\n                <button\r\n                    onClick={onClickPlus}\r\n                    className=\"button button--outline button--circle cart__item-count-plus\">\r\n                    <img width=\"20\" height=\"20\" src=\"https://img.icons8.com/android/24/plus.png\" alt=\"plus\"/>\r\n                </button>\r\n            </div>\r\n            <div className=\"cart__item-price\">\r\n                <b>{price * count} â‚½</b>\r\n            </div>\r\n            <div className=\"cart__item-remove\">\r\n                <button className=\"button button--outline button--circle\"\r\n                        onClick={onClickRemove}\r\n                >\r\n                    <img width=\"20\" height=\"20\" src=\"https://img.icons8.com/ios/50/delete-sign--v1.png\" alt=\"delete-sign\"/>\r\n                </button>\r\n            </div>\r\n            <ConfirmModal\r\n                onConfirm={onConfirmDelete}\r\n                onCancel={onCancelDelete}\r\n                isVisible={isModalVisible}\r\n                message=\"Are you sure you want to remove the item?\"\r\n            />\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport cartEmptyImg from '../assets/img/empty-cart.png';\r\n\r\nexport const EmptyCart = () => (\r\n    <div className=\"cart cart--empty\">\r\n        <h2>\r\n            Cart is empty <span>ðŸ˜•</span>\r\n        </h2>\r\n        <p>\r\n            Most likely, you haven't ordered a burger yet.\r\n            <br />\r\n            To order a burger, go to the main page.\r\n        </p>\r\n        <img src={cartEmptyImg} alt=\"Empty cart\" />\r\n        <Link to=\"/\" className=\"button button--black\">\r\n            <span>Come back</span>\r\n        </Link>\r\n    </div>\r\n);","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgGreyArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 13L1 6.93015L6.86175 1\",\n    stroke: \"#D3D3D3\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGreyArrowLeft);\nexport default __webpack_public_path__ + \"static/media/grey-arrow-left.7829119cd62b4e2b3fddcff288da2b8f.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {CartItem, EmptyCart, ConfirmModal} from \"../components\";\r\nimport {cartActions} from \"../redux/cartSlice/cartSlice\";\r\nimport {selectCart} from \"../redux/cartSlice/selectCart\";\r\nimport {useAppDispatch} from \"../customHooks/useAppDispatch\";\r\nimport comeBack from '../assets/img/grey-arrow-left.svg';\r\n\r\n\r\nconst Cart = () => {\r\n    const [isConfirmModalVisible, setConfirmModalVisible] = useState(false);\r\n    const {totalPrice, items} = useSelector(selectCart);\r\n    const dispatch = useAppDispatch();\r\n    const totalCount = items.reduce((sum: number, item: any) => sum + item.count, 0);\r\n\r\n\r\n    const onClickClear = () => {\r\n        setConfirmModalVisible(true);\r\n    };\r\n\r\n    const onConfirmClear = () => {\r\n        dispatch(cartActions.clearItems());\r\n        setConfirmModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {totalPrice > 0 ? <div className=\"container container--cart\">\r\n                    <div className=\"cart\">\r\n                        <div className=\"cart__top\">\r\n                            <h2 className=\"content__title\">\r\n                                <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios/50/shopping-cart--v1.png\"\r\n                                     alt=\"shopping-cart--v1\"\r\n                                />\r\n                                Cart\r\n                            </h2>\r\n                            <div onClick={onClickClear}\r\n                                 className=\"cart__clear\"\r\n                            >\r\n                                <img width=\"20\" height=\"20\" src=\"https://img.icons8.com/ios/50/delete-forever--v1.png\"\r\n                                     alt=\"delete-forever--v1\"\r\n                                />\r\n                                <span>Clear the cart</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"content__items\">\r\n                            {items.map((item: any) => (\r\n                                <CartItem key={item.id} {...item} />\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"cart__bottom\">\r\n                            <div className=\"cart__bottom-details\">\r\n                                <span> Total burgers: <b>{totalCount} pcs.</b> </span>\r\n                                <span> Order price: <b>{totalPrice} â‚½</b> </span>\r\n                            </div>\r\n                            <div className=\"cart__bottom-buttons\">\r\n                                <Link to=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n                                    <img src={comeBack} alt={'comeBack'}/>\r\n                                    <span>Come back</span>\r\n                                </Link>\r\n                                <div className=\"button pay-btn\">\r\n                                    <span>Pay now</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : <EmptyCart/>}\r\n            <ConfirmModal\r\n                isVisible={isConfirmModalVisible}\r\n                onConfirm={onConfirmClear}\r\n                onCancel={() => setConfirmModalVisible(false)}\r\n                message=\"Are you sure you want to empty the cart?\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cart;"],"names":["ConfirmModal","_ref","onConfirm","onCancel","isVisible","message","_jsxs","className","children","_jsx","onClick","CartItem","id","title","type","price","count","imageUrl","_useState","useState","_useState2","_slicedToArray","isModalVisible","setIsModalVisible","dispatch","useAppDispatch","src","alt","disabled","cartActions","minusItem","width","height","addItem","removeItem","EmptyCart","cartEmptyImg","Link","to","isConfirmModalVisible","setConfirmModalVisible","_useSelector","useSelector","selectCart","totalPrice","items","totalCount","reduce","sum","item","_Fragment","map","_objectSpread","comeBack","clearItems"],"sourceRoot":""}